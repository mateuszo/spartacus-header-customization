/* You can add global styles to this file, and also import other style files */
@import url("https://fonts.googleapis.com/css?family=Raleway:100,300,400,500,700,900&display=swap&subset=latin-ext");

$styleVersion: 4.2;
$font-family-base: "Raleway", sans-serif;
$skipComponentStyles: (cx-mini-cart);

@import "~@spartacus/styles/index";

:root {
  --cx-color-secondary: #f1f2f3;
  --cx-color-primary: #43464e;
}

// ...

// header section styles
header {
  --line-height: 1.6rem;
  --padding: 1rem;
  background: linear-gradient(
    to bottom,
    var(--cx-color-secondary) calc(var(--line-height) + var(--padding)),
    transparent 0
  );
  color: var(--cx-color-primary);

  .SiteLinks {
    color: unset;
    justify-content: unset;
    font-size: 0.875rem;
  }

  .SiteContext {
    justify-content: flex-end;
    &::after {
      content: none; // remove the border between upper and lower header divider
    }
  }

  .NavigationBar {
    flex: unset;
  }
}

// limits the number of top level navigation nodes
cx-navigation-ui > nav:nth-of-type(n + 4) {
  display: none;
}

// navigation component styles
cx-navigation-ui.flyout {
  a,
  span {
    font-weight: 400;
  }
}

// generic link component styles
cx-generic-link {
  a {
    text-decoration: underline;
  }
}

// site context selector component styles
cx-site-context-selector {
  color: var(--cx-color-primary);
  select {
    background: none;
  }
}

// mini cart component styles.
// !! Remember to remove the default component styles with: `$skipComponentStyles: (cx-mini-cart);`
cx-mini-cart {
  margin-right: 1rem;
  position: relative;
  a {
    color: initial;
  }
  .total {
    display: none;
  }
  .count {
    padding: 0 0.25rem;
    position: absolute;
    top: -0.5rem;
  }
}

// searchbox component styles
cx-searchbox {
  border-bottom: 2px solid var(--cx-color-primary);
  color: var(--cx-color-primary);
  margin-bottom: 0.25rem;
  label {
    padding: unset;
    div.search-icon {
      align-self: center;
      flex-basis: unset;
      padding: unset;
    }
    input {
      height: unset;
    }
  }
  & > * {
    background-color: unset;
  }
}
